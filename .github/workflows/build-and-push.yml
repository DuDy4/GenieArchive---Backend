name: Build and Push

on:
  push:
    branches:
      - main
  workflow_run:
    workflows: ["Auto-merge feature to main"]
    types:
      - completed
  workflow_dispatch:  # Allows manual triggering
jobs:
  build-and-push:
    if: github.event_name != 'workflow_run' || github.event.workflow_run.conclusion == 'success'

    runs-on: ubuntu-latest
    steps:
      - name: Debugging information
        run: |
          echo "Event name: ${{ github.event_name }}"
          echo "Git ref: ${{ github.ref }}"
          echo "GitHub Actor: ${{ github.actor }}"
          echo "GitHub SHA: ${{ github.sha }}"
          echo "GitHub Workspace: ${{ github.workspace }}"

      - name: Checkout the code
        uses: actions/checkout@v4.2.2

      - name: Login to Azure Container Registry
        uses: azure/docker-login@v2
        with:
          login-server: ${{ secrets.ACR_LOGIN_SERVER }}
          username: ${{ secrets.ACR_USERNAME }}
          password: ${{ secrets.ACR_PASSWORD }}


      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3.7.1
        with:
            driver: docker-container
            driver-opts: |
              image=moby/buildkit:latest
        continue-on-error: true
        

      - name: Get version from pyproject.toml
        id: get_version
        run: |
          if [ -f pyproject.toml ]; then
            version=$(grep -m1 version pyproject.toml | cut -d '"' -f2)
            current_time=$(date +%H.%M)
            tag="${version}.${current_time}"
            echo "Tag: $tag"
            echo "tag=$tag" >> $GITHUB_OUTPUT
          else
            echo "pyproject.toml not found. Using fallback version."
            fallback_tag="fallback-$(date +%Y%m%d%H%M%S)"
            echo "tag=$fallback_tag" >> $GITHUB_OUTPUT
          fi

     - name: Build temp cache image
        uses: docker/build-push-action@v6.9.0
        with:
          context: .
          file: Dockerfile.temp
          tags: temp-cache-image:latest
          load: true
          cache-from: type=gha,scope=temp-dockerfile-cache
          cache-to: type=gha,mode=max,scope=temp-dockerfile-cache
          
      - name: Build and push start_api
        uses: docker/build-push-action@v6.9.0
        with:
          context: .
          file: Dockerfile.root
          tags: ${{ secrets.ACR_LOGIN_SERVER }}/start_api:${{ steps.get_version.outputs.tag }}
          load: true
          cache-from: type=gha,scope=start-api-cache
          cache-to: type=gha,mode=max,scope=start-api-cache
          push: true
         

      
      - name: Build and push data services
        run: |
          services=("meetings_consumer" "pdl_consumer" "person_langsmith" "persons_manager" "slack_consumer" "apollo_consumer" "company_consumer" "sales_material_consumer" "emails_manager" "tasks_manager")
          for service in "${services[@]}"
          do
            if docker build -f Dockerfile.data --build-arg SERVICE_NAME=$service -t ${{ secrets.ACR_LOGIN_SERVER }}/$service:${{ steps.get_version.outputs.tag }} .; then
                docker push ${{ secrets.ACR_LOGIN_SERVER }}/$service:${{ steps.get_version.outputs.tag }} || echo "Failed to push $service"
            echo "done"
            else
              echo "Failed to build $service"
            fi
          done



      - name: Print job status
        if: always()
        run: |
          echo "Job status: ${{ job.status }}"
          echo "Event name: ${{ github.event_name }}"
          echo "Ref: ${{ github.ref }}"
          
      - name: Checkout genie-chart repository
        uses: actions/checkout@v3
        with:
          repository: thegenieai/genieai-helm-charts
          path: genie-chart
          token: ${{ secrets.GH_PAT }}

      - name: Update genie-chart values
        run: |
          cd genie-chart/genie-chart/genie-chart
          #sed -i 's/tag: .*/tag: ${{ steps.get_version.outputs.tag }}/' values.yaml
          sed -i '0,/tag: .*/s/tag: .*/tag: ${{ steps.get_version.outputs.tag }}/' values.yaml
          git config user.name github-actions
          git config user.email github-actions@github.com
          git add values.yaml
          git commit -m "Update image tag to ${{ steps.get_version.outputs.tag }}"
          git push
